name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get commit message
        id: commit
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "commit_message=$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "Commit message: $COMMIT_MSG"

      - name: Check if commit message is a version number
        id: check_version
        run: |
          if [[ "${{ steps.commit.outputs.commit_message }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "is_version=true" >> $GITHUB_OUTPUT
            echo "Commit message is a version number"
          else
            echo "is_version=false" >> $GITHUB_OUTPUT
            echo "Commit message is not a version number"
          fi

      - name: Create tag
        if: steps.check_version.outputs.is_version == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v${{ steps.commit.outputs.commit_message }}"
          git push origin "v${{ steps.commit.outputs.commit_message }}"

      - name: Setup Node.js
        if: steps.check_version.outputs.is_version == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        if: steps.check_version.outputs.is_version == 'true'
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        if: steps.check_version.outputs.is_version == 'true'
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        if: steps.check_version.outputs.is_version == 'true'
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        if: steps.check_version.outputs.is_version == 'true'
        run: pnpm install --no-frozen-lockfile

      - name: Build
        if: steps.check_version.outputs.is_version == 'true'
        run: pnpm build

      - name: Publish to NPM
        if: steps.check_version.outputs.is_version == 'true'
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 